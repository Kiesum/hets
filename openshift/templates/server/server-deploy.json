{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata":
  {
    "name": "${NAME}-deployment-template",
    "creationTimestamp": null
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata":
      {
        "name": "${NAME}",
        "labels":
        {
          "template": "${NAME}-deployment"
        },
        "annotations":
        {
          "description": "Exposes and load balances the application pods."
        }
      },
      "spec":
      {
        "ports": [
          {
            "name": "8080-tcp",
            "protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector":
        {
          "name": "${NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata":
      {
        "name": "${NAME}"
      },
      "spec":
      {
        "host": "${APPLICATION_DOMAIN}",
        "to":
        {
          "kind": "Service",
          "name": "${NAME}",
          "weight": 100
        },
        "port":
        {
          "targetPort": "8080-tcp"
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata":
      {
        "name": "${PERSISTENT_VOLUME_NAME}"
      },
      "spec":
      {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources":
        {
          "requests":
          {
            "storage": "${PERSISTENT_VOLUME_SIZE}"
          }
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata":
      {
        "name": "${NAME}",
        "labels":
        {
          "template": "${NAME}-deployment"
        },
        "annotations":
        {
          "description": "Defines how to deploy ${NAME}"
        }
      },
      "spec":
      {
        "strategy":
        {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams":
            {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from":
              {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "${SOURCE_IMAGE_NAME}:${TAG_NAME}"
              }
            }
          }
        ],
        "replicas": 1,
        "selector":
        {
          "name": "${NAME}"
        },
        "template":
        {
          "metadata":
          {
            "name": "${NAME}",
            "labels":
            {
              "name": "${NAME}"
            }
          },
          "spec":
          {
            "volumes": [
              {
                "name": "${NAME}-docs",
                "persistentVolumeClaim":
                {
                  "claimName": "${PERSISTENT_VOLUME_NAME}"
                }
              },
              {
                "name": "${NAME}-secret-volume",
                "secret":
                {
                  "secretName": "${SECRET_VOLUME_NAME}",
                  "defaultMode": 420
                }
              }
            ],
            "containers": [
              {
                "name": "${NAME}",
                "image": "",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "POSTGRESQL_DATABASE",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "POSTGRESQL_USER",
                    "valueFrom":
                    {
                      "secretKeyRef":
                      {
                        "name": "${DATABASE_DEPLOYMENT_NAME}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_PASSWORD",
                    "valueFrom":
                    {
                      "secretKeyRef":
                      {
                        "name": "${DATABASE_DEPLOYMENT_NAME}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "ADMINPW",
                    "value": "${ADMIN_PASSWORD}"
                  },
                  {
                    "name": "UserInitializationFile",
                    "value": "${USER_INITIALIZATION_FILE}"
                  },
                  {
                    "name": "RegionInitializationFile",
                    "value": "${REGION_INITIALIZATION_FILE}"
                  },
                  {
                    "name": "DistrictInitializationFile",
                    "value": "${DISTRICT_INITIALIZATION_FILE}"
                  },
                  {
                    "name": "ConditionsInitializationFile",
                    "value": "${CONDITIONS_INITIALIZATION_FILE}"
                  },
                  {
                    "name": "EquipmentTypesInitializationFile",
                    "value": "${EQUIPMENT_INITIALIZATION_FILE}"
                  },
                  {
                    "name": "ASPNETCORE_ENVIRONMENT",
                    "value": "${ASPNETCORE_ENVIRONMENT}"
                  },
                  {
                    "name": "UploadPath",
                    "value": "${UPLOAD_PATH}"
                  },
                  {
                    "name": "PDF_SERVICE_NAME",
                    "value": "${PDF_SERVICE_NAME}"
                  }
                ],
                "resources":
                {
                  "limits":
                  {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  },
                  "requests":
                  {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "${NAME}-docs",
                    "mountPath": "/uploads"
                  },
                  {
                    "name": "${NAME}-secret-volume",
                    "readOnly": true,
                    "mountPath": "/secrets"
                  }
                ]
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the resources defined in this template.",
      "required": true,
      "value": "server"
    },
    {
      "name": "SOURCE_IMAGE_NAME",
      "displayName": "Source Image Name",
      "description": "The name of the image to use for this resource.",
      "required": true,
      "value": "server"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the application, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "required": true,
      "value": "tran-hets-tools"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "required": true,
      "value": "dev"
    },
    {
      "name": "PERSISTENT_VOLUME_NAME",
      "displayName": "Persistent Volume Name",
      "description": "The name of the persistent volume associated with the deployment.",
      "required": true,
      "value": "server-docs-pvc"
    },
    {
      "name": "PERSISTENT_VOLUME_SIZE",
      "displayName": "Persistent Volume Size",
      "description": "The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.",
      "required": true,
      "value": "1Gi"
    },
    {
      "name": "SECRET_VOLUME_NAME",
      "displayName": "Secret Volume Name",
      "description": "The name of the secret to be muonted as a volume during deployment.",
      "required": true,
      "value": "hets-secret"
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database Service Name",
      "required": true,
      "value": "postgresql"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "required": true,
      "description": "Name of the deployed database (see environment variables in deployed database).",
      "value": "hets"
    },
    {
      "name": "DATABASE_DEPLOYMENT_NAME",
      "displayName": "Database Deployment Name",
      "description": "The name associated to the database deployment resources.  In particular, this is used to wrie up the credentials associated to the database.",
      "required": true,
      "value": "postgresql"
    },    
    {
      "name": "ADMIN_PASSWORD",
      "displayName": "Admin Password",
      "description": "Initital Admin Password.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "USER_INITIALIZATION_FILE",
      "displayName": "User Initialization File",
      "description": "The file to be used for initializing user accounts.  This file is loaded from a secret during deployment.",
      "required": true,
      "value": "/secrets/users.json"
    },
    {
      "name": "REGION_INITIALIZATION_FILE",
      "displayName": "Region Initialization File",
      "description": "The file to be used for initializing regions.  This file is loaded from a secret during deployment.",
      "required": true,
      "value": "/secrets/regions.json"
    },
    {
      "name": "DISTRICT_INITIALIZATION_FILE",
      "displayName": "District Initialization File",
      "description": "The file to be used for initializing districts.  This file is loaded from a secret during deployment.",
      "required": true,
      "value": "/secrets/districts.json"
    },
    {
      "name": "CONDITIONS_INITIALIZATION_FILE",
      "displayName": "Conditions Initialization File",
      "description": "The file to be used for initializing conditions.  This file is loaded from a secret during deployment.",
      "required": true,
      "value": "/secrets/conditions.json"
    },
    {
      "name": "EQUIPMENT_INITIALIZATION_FILE",
      "displayName": "Equipment Type Initialization File",
      "description": "The file to be used for initializing equipment types.  This file is loaded from a secret during deployment.",
      "required": true,
      "value": "/secrets/equipment.json"
    },
    {
      "name": "ASPNETCORE_ENVIRONMENT",
      "displayName": "AspNetCore Environment",
      "description": "The ASP Net Core deployment environment setting.",
      "required": true,
      "value": "Development"
    },
    {
      "name": "UPLOAD_PATH",
      "displayName": "Upload Path",
      "description": "The path for uploading files.",
      "required": true,
      "value": "/uploads/"
    },
    {
      "name": "PDF_SERVICE_NAME",
      "displayName": "PDF Service Name",
      "description": "The name (URL) of the PDF service.",
      "required": true,
      "value": "http://pdf:8080"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "CPU Limit",
      "description": "Maximum amount of CPU the container can use.",
      "value": "500m"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the container can use.",
      "value": "512Mi"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "CPU Request",
      "description": "Starting amount of CPU the container can use.",
      "value": "50m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Memory Request",
      "description": "Starting amount of memory the container can use.",
      "value": "256Mi"
    }
  ]
}